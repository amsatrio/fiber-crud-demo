// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/m-role": {
            "get": {
                "description": "Get Page MRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mRole"
                ],
                "summary": "MRolePage",
                "parameters": [
                    {
                        "type": "string",
                        "default": "gzip",
                        "description": "gzip",
                        "name": "Accept-Encoding",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "default": "0",
                        "description": "page",
                        "name": "_page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "5",
                        "description": "size",
                        "name": "_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "_sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "filter",
                        "name": "_filter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "global filter",
                        "name": "_q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Update MRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mRole"
                ],
                "summary": "MRoleUpdate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "gzip",
                        "description": "gzip",
                        "name": "Accept-Encoding",
                        "in": "header"
                    },
                    {
                        "description": "Add MRoleRequest",
                        "name": "mRole",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.MRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create MRole",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mRole"
                ],
                "summary": "MRoleCreate",
                "parameters": [
                    {
                        "type": "string",
                        "default": "gzip",
                        "description": "gzip",
                        "name": "Accept-Encoding",
                        "in": "header"
                    },
                    {
                        "description": "Add MRoleRequest",
                        "name": "mRole",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.MRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/m-role/{id}": {
            "get": {
                "description": "Get MRole by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mRole"
                ],
                "summary": "MRoleIndex",
                "parameters": [
                    {
                        "type": "string",
                        "default": "gzip",
                        "description": "gzip",
                        "name": "Accept-Encoding",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "MRole id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete MRole by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mRole"
                ],
                "summary": "MRoleDelete",
                "parameters": [
                    {
                        "type": "string",
                        "default": "gzip",
                        "description": "gzip",
                        "name": "Accept-Encoding",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "MRole id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "path": {
                    "type": "string",
                    "example": "/v1/m_biodata"
                },
                "status": {
                    "type": "integer",
                    "example": 200
                },
                "timestamp": {
                    "type": "string",
                    "example": "2024-02-16 10:33:10"
                }
            }
        },
        "schema.MRoleRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 20
                },
                "id": {
                    "type": "integer"
                },
                "isDelete": {
                    "type": "boolean"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 20
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
